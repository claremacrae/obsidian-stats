---
import { readFileSync } from 'fs';
import { escape, fromCSV, op } from 'arquero';
import { Version } from '../../../../src/version';
import { prettyDateString } from '../../../../src/utils';

const ReleaseData = fromCSV(readFileSync('../releases-changelog.csv', 'utf8')).filter(d => d!.platform === 'desktop');
const ReleaseTimeData = ReleaseData.select('date', 'insider', 'version').dedupe();

const patchesPerMinorVersion = ReleaseTimeData.derive({ minorVersion: escape(d => d.version.split('.').slice(0, 2).join('.')) })
	.groupby('minorVersion')
	.derive({ count: d => op.count() })
	.filter(d => !d.insider)
	.rollup({
		count: d => op.min(d.count),
		firstPatch: d => op.min(d.version),
		firstDate: d => op.min(d.date),
	})
	.objects();
---

<table>
	<thead>
		<tr>
			<th>Minor Version</th>
			<th>First Public Version</th>
			<th>First Public Release Date</th>
			<th>Number of Patches</th>
		</tr>
	</thead>
	<tbody>
		{
			patchesPerMinorVersion.map(({ minorVersion, firstPatch, firstDate, count }) => (
				<tr>
					<td>{Version.pretty(minorVersion).slice(0, -2)}</td>
					<td>{Version.pretty(firstPatch)}</td>
					<td>{prettyDateString(firstDate)}</td>
					<td>{count}</td>
				</tr>
			))
		}
	</tbody>
</table>
